<?php

/**
 * @file
 * Install file for the aws module.
 */

use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\encrypt\Entity\EncryptionProfile;
use Drupal\key\Entity\Key;
use Drupal\aws\Entity\Profile;

/**
 * Implements hook_requirements().
 */
function aws_requirements($phase) {
  // @todo This should also check to make sure that the encryption profile exists.
  $requirements = [];
  if ($phase == 'runtime') {
    $profile = Profile::load('default');
    if (!$profile->getAccessKey()) {
      $default_profile_url = Link::fromTextAndUrl('here', Url::fromRoute('entity.aws_profile.edit_form', ['aws_profile' => 'default']))->toString();
      $requirements['aws_default_profile'] = [
        'title' => t('Amazon Web Services'),
        'value' => t('Default Profile not Configured!'),
        'description' => t("The 'default' profile has not been configured yet. Please configure it @here.", [
          '@here' => $default_profile_url,
        ]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function aws_install() {
  // Create a default aws profile.
  $profile = new Profile([
    'id' => 'default',
    'name' => 'Default',
    'default' => 1,
    'aws_access_key_id' => '',
    'aws_secret_access_key' => '',
    'region' => 'us-east-1',
  ]);
  $profile->save();

  // Create an encryption key.
  $site_config = \Drupal::config('system.site');
  $private_key = md5($site_config->get('uuid') . time());
  $key = new Key([
    'id' => 'aws_encryption_key',
    'label' => 'AWS Encryption Key',
    'key_type' => 'encryption',
    'key_type_settings' => [
      'key_size' => 256,
    ],
    'key_provider' => 'config',
    'key_provider_settings' => [
      'base64_encoded' => FALSE,
      'key_value' => $private_key,
    ],
    'key_input' => 'text_field',
    'key_input_settings' => [
      'base64_encoded' => FALSE,
    ],
  ], 'key');
  $key->save();

  // Create an encryption profile.
  $encryption_profile = new EncryptionProfile([
    'id' => 'aws_encryption_profile',
    'label' => 'AWS Encryption Profile',
    'encryption_method' => 'real_aes',
    'encryption_key' => 'aws_encryption_key',
    'encryption_method_configuration' => [],
  ], 'encryption_profile');
  $encryption_profile->save();
}

/**
 * Implements hook_uninstall().
 */
function aws_uninstall() {
  // Delete all config entities of `aws_profile`.
  $profile_storage = \Drupal::entityTypeManager()->getStorage('aws_profile');
  $profile_ids = \Drupal::entityQuery('aws_profile')->execute();
  $profiles = $profile_storage->loadMultiple($profile_ids);
  $profile_storage->delete($profiles);

  // Delete the aws encryption profile.
  $encryption_profile_storage = \Drupal::entityTypeManager()->getStorage('encryption_profile');
  $encryption_profile = $encryption_profile_storage->load('aws_encryption_profile');
  $encryption_profile->delete();

  // Delete the aws encryption key.
  $key_storage = \Drupal::entityTypeManager()->getStorage('key');
  $key = $key_storage->load('aws_encryption_key');
  $key->delete();
}
